package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"ethparser/graph/model"
)

// Blocks is the resolver for the blocks field.
func (r *queryResolver) Blocks(ctx context.Context, filter *model.BlockFilter) ([]*model.Block, error) {
	cursor, err := r.BlockFetcher.Collection("blocks").Find(ctx, nil)
	defer cursor.Close(ctx)
	if err != nil {
		return nil, err
	}
	blocks := []*model.Block{}
	for cursor.Next(ctx) {
		block := &model.Block{}
		cursor.Decode(block)
		blocks = append(blocks, block)
	}

	return blocks, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
